{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n  return _openBlock(), _createBlock(_component_el_scrollbar, {\n    height: \"400px\"\n  }, {\n    default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(20, item => {\n      return _createElementVNode(\"p\", {\n        key: item,\n        class: \"scrollbar-demo-item\"\n      }, _toDisplayString(item), 1 /* TEXT */);\n    }), 64 /* STABLE_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_el_scrollbar","height","_createElementBlock","_Fragment","_renderList","item","_createElementVNode","key","class"],"sources":["C:\\vscode progect\\JAVA progect\\LNCQXT\\cqxt-manage\\src\\components\\layout\\CqxtLeft.vue"],"sourcesContent":["<template>\r\n    <el-scrollbar height=\"400px\">\r\n      <p v-for=\"item in 20\" :key=\"item\" class=\"scrollbar-demo-item\">{{ item }}</p>\r\n    </el-scrollbar>\r\n  </template>\r\n  \r\n  <style scoped>\r\n  .scrollbar-demo-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 50px;\r\n    margin: 10px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    background: var(--el-color-primary-light-9);\r\n    color: var(--el-color-primary);\r\n  }\r\n  </style>\r\n  "],"mappings":";;;uBACIA,YAAA,CAEeC,uBAAA;IAFDC,MAAM,EAAC;EAAO;sBACvB,MAAkB,E,cAArBC,mBAAA,CAA4EC,SAAA,QAAAC,WAAA,CAA1D,EAAE,EAAVC,IAAI;aAAdC,mBAAA,CAA4E;QAArDC,GAAG,EAAEF,IAAI;QAAEG,KAAK,EAAC;0BAAyBH,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}