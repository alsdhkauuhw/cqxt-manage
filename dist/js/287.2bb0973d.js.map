{"version":3,"file":"js/287.2bb0973d.js","mappings":"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","sources":["webpack://cqxt-manage/./src/enum/router-name.ts","webpack://cqxt-manage/./src/enum/validate.ts","webpack://cqxt-manage/./src/mixins/mixins.ts","webpack://cqxt-manage/./src/views/signup.vue?b136","webpack://cqxt-manage/./src/views/signup.vue","webpack://cqxt-manage/./src/views/signup.vue?688f"],"sourcesContent":["export const enum RouterName {\r\n    Error = \"/404\",\r\n    Signin = \"/sign-in\",\r\n    SignUp = \"/sign-up\",\r\n    Cqxtcontainer = \"/\",\r\n    MySpace = \"/my-space\"\r\n}","import { HttpManager } from \"@/API\";\r\nimport { proxyRefs } from \"vue\";\r\n\r\nexport const valiusername=(rule, value, callback)=>{\r\n    if (!value) {\r\n        return callback(new Error(\"账号不能为空\"));\r\n    } else {\r\n         callback();\r\n    }\r\n}\r\n\r\nexport const valipassword=(rule, value, callback)=>{\r\n    if (!value) {\r\n        return callback(new Error(\"密码不能为空\"));\r\n    } else {\r\n        callback();\r\n    }\r\n}\r\n//登入规则\r\nexport const SigninRules = {\r\n        username: [{ validator: valiusername, trigger: 'blur' }],\r\n        password: [{ validator: valipassword, trigger: 'change' }]\r\n}\r\n\r\n//注册规则\r\n/* export const valiemail = (rule, value, callback)=>{\r\n    if (!value) {\r\n        return callback(new Error(\"邮箱不能为空\"));\r\n    }\r\n    if(value == \"/[]\"){\r\n\r\n    }\r\n} */\r\nexport const valiusernames = async (rule, value, callback)=>{\r\n    if (!value) {\r\n        return callback(new Error(\"账号不能为空\"));\r\n    } \r\n    const username = value\r\n    const result = (await HttpManager.checkUsername(username)) as ResponseBody;\r\n    if (!result.success) {\r\n        return callback(new Error(\"该账号已被他人使用\"));\r\n    }else {\r\n        callback();\r\n    }\r\n\r\n}\r\n\r\nexport const valiemail = async (rule, value, callback)=>{\r\n    if (!value) {\r\n        return callback(new Error(\"账号不能为空\"));\r\n    } \r\n    const email = value\r\n    const result = (await HttpManager.checkEmail(email)) as ResponseBody;\r\n    if (!result.success) {\r\n        return callback(new Error(\"该邮箱已被使用\"));\r\n    }else {\r\n        callback();\r\n    }\r\n\r\n}\r\n\r\nexport const SignupRules = {\r\n    email: [\r\n        {\r\n        validator: valiemail,\r\n        required: true,\r\n        trigger: 'blur',\r\n        },\r\n        {\r\n        type: 'email',\r\n        message: '请输入正确的emali',\r\n        trigger: ['blur', 'change'],\r\n        },\r\n    ],\r\n    name: [\r\n        { required: true, trigger: 'blur', message: '请输入名字' },\r\n        {min: 3, max: 16, message: '名字格式不对', trigger: 'blur'}\r\n    ],\r\n    username: [\r\n        { validator: valiusernames, required: true, trigger: 'blur' },\r\n        {min: 8, max: 16, message: '账号应该在8-16位数之间', trigger: 'blur'}\r\n    ],\r\n    password: [\r\n        { message: '密码不能为空', required: true, trigger: 'blur' },\r\n        {min: 8, max: 16, message: '密码应该在8-16位数之间', trigger: 'blur'}\r\n    ]\r\n}\r\n\r\n\r\n","import  {RouterName}  from \"@/enum/router-name\";\r\nimport {useStore} from \"vuex\";\r\nimport { computed, getCurrentInstance } from \"vue\";\r\nimport { LocationQueryRaw } from \"vue-router\";\r\n\r\ninterface routerOptions {\r\n    path?: string;\r\n    query?: LocationQueryRaw;\r\n}\r\n\r\nexport default function () {\r\n    const { proxy } = getCurrentInstance();\r\n  \r\n    const store = useStore();\r\n    const token = computed(() => store.getters.token);\r\n    \r\n    // 导航索引\r\n    /* function changeIndex(value) {\r\n        proxy.$store.commit(\"setActiveNavName\", value);\r\n    } */\r\n\r\n    // 路由管理\r\n    function routerManager(routerName: string | number, options: routerOptions) {\r\n        switch (routerName) {\r\n        case RouterName.SignUp:\r\n        case RouterName.Error:\r\n        default:\r\n            proxy.$router.push({ path: options.path });\r\n            break;\r\n        }\r\n  }\r\n  return{\r\n    routerManager,\r\n  }\r\n}    \r\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_form = _resolveComponent(\"el-form\")!\n\n  return (_openBlock(), _createBlock(_component_el_form, {\n    \"status-icon\": \"\",\n    rules: _ctx.SignupRules,\n    ref: \"SignupRef\",\n    model: _ctx.signup,\n    \"label-width\": \"auto\",\n    class: \"signup-ruleform\"\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_el_form_item, {\n        label: \"邮箱\",\n        prop: \"email\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_input, {\n            \"aria-placeholder\": \"请输入邮箱\",\n            modelValue: _ctx.signup.email,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.signup.email) = $event))\n          }, null, 8, [\"modelValue\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_el_form_item, {\n        label: \"用户名\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_input, {\n            \"aria-placeholder\": \"用户名\",\n            modelValue: _ctx.signup.name,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.signup.name) = $event))\n          }, null, 8, [\"modelValue\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_el_form_item, {\n        label: \"账号\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_input, {\n            \"aria-placeholder\": \"账号\",\n            modelValue: _ctx.signup.username,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.signup.username) = $event))\n          }, null, 8, [\"modelValue\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_el_form_item, {\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_input, {\n            \"aria-placeholder\": \"密码\",\n            modelValue:  _ctx.signup.password,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (( _ctx.signup.password) = $event))\n          }, null, 8, [\"modelValue\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_button, {\n            onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.signUp())),\n            color: \"#626aef\",\n            dark: _ctx.isDark\n          }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"注册\")\n            ]),\n            _: 1\n          }, 8, [\"dark\"])\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }, 8, [\"rules\", \"model\"]))\n}","<template>\r\n    <el-form status-icon :rules=\"SignupRules\" ref=\"SignupRef\" :model=\"signup\" label-width=\"auto\" class=\"signup-ruleform\"> \r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n            <el-input aria-placeholder=\"请输入邮箱\" v-model=\"signup.email\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"用户名\" prop=\"name\">\r\n            <el-input aria-placeholder=\"用户名\" v-model=\"signup.name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"账号\" prop=\"username\">\r\n            <el-input aria-placeholder=\"账号\" v-model=\"signup.username\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input aria-placeholder=\"密码\" v-model=\" signup.password\"/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <el-button @click=\"signUp()\" color=\"#626aef\" :dark=\"isDark\">注册</el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, getCurrentInstance, reactive, ref } from 'vue';\r\nimport { SignupRules } from \"@/enum/validate\"\r\nimport mixin from \"@/mixins/mixins\"\r\nimport { ElMessage, FormInstance } from 'element-plus';\r\nimport { HttpManager } from '@/API';\r\nimport { RouterName } from '@/enum/router-name';\r\nexport default defineComponent({\r\n    name: 'signup',\r\n    setup(){\r\n        const {proxy} = getCurrentInstance()\r\n        const signup = reactive({\r\n            email: \"\",\r\n            name: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n        })\r\n        const { routerManager } = mixin()\r\n        \r\n        async function signUp(){\r\n        try {\r\n            const valid = await (proxy.$refs[\"SignupRef\"] as any).validate();\r\n            const email = signup.email\r\n            const name = signup.name\r\n            const username = signup.username\r\n            const password = signup.password\r\n            const result = (await HttpManager.Signup(email, name, username, password)) as ResponseBody\r\n            if(result.success){\r\n                //console.log(result.message)\r\n                ElMessage.success(result.message)\r\n                routerManager(RouterName.Signin, {path: RouterName.Signin})\r\n            }else{\r\n                //console.log(result.message)\r\n                ElMessage.error(result.message)\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }     \r\n                \r\n            \r\n    } \r\n\r\n        return {\r\n            signup,\r\n            SignupRules,\r\n            signUp,\r\n        }\r\n    }\r\n\r\n})\r\n</script>","import { render } from \"./signup.vue?vue&type=template&id=01a0c6c8&ts=true\"\nimport script from \"./signup.vue?vue&type=script&lang=ts\"\nexport * from \"./signup.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["RouterName","valiusername","rule","value","callback","Error","valipassword","SigninRules","username","validator","trigger","password","valiusernames","async","result","HttpManager","checkUsername","success","valiemail","email","checkEmail","SignupRules","required","type","message","name","min","max","proxy","getCurrentInstance","store","useStore","computed","getters","token","routerManager","routerName","options","SignUp","$router","push","path","render","_ctx","_cache","$props","$setup","$data","$options","_component_el_input","_resolveComponent","_component_el_form_item","_component_el_button","_component_el_form","_openBlock","_createBlock","rules","ref","model","signup","class","default","_withCtx","_createVNode","label","prop","modelValue","$event","_","onClick","signUp","color","dark","isDark","_createTextVNode","defineComponent","setup","reactive","mixin","$refs","validate","Signup","ElMessage","Signin","error","console","__exports__"],"sourceRoot":""}